@using NotAnotherBasePlanner.Data

<style>
    .card-group > .card {
        flex-basis: auto;
    }
</style>
<h3>Base: @PlanetFullDesignation</h3>

<div class="row">
    <div id="planet info" class="card col-sm-12 col-md-2">
        <div class="card-body">
            <h5 class="card-title">Planet Info</h5>
            <hr/>
            <h6 class="card-subtitle">Characteristics</h6>
            <span style="display: inline-block; min-width: 6.25em">Surface:</span> @PlanetSurface <br/>
            <span style="display: inline-block; min-width: 6.25em">Gravity:</span> @PlanetGravity <br/>
            <span style="display: inline-block; min-width: 6.25em">Temperature:</span> @PlanetTemperature <br/>
            <span style="display: inline-block; min-width: 6.25em">Pressure:</span > @PlanetPressure
            <hr/>
            <h6 class="card-subtitle">Resources</h6>
            @foreach (Resource res in planet.Resources)
            {
                <text><span style="display: inline-block; min-width: 2em">@res.MaterialTicker</span> | <span style="display: inline-block; min-width: 5em">@res.Type</span> | @res.Concentration.ToString("F2")%<br/></text>
            }
        </div>
    </div>
    <div id="base overview" class="card col-sm-12 col-md-6">
        <div class="card-body">
            <h5 class="card-title">Overview</h5>
            <hr/>
            <h6 class="card-subtitle">Area: </h6><p>@basePlan.UsedArea / @basePlan.AvailableArea</p>
            
            <h6 class="card-subtitle">Workforce</h6>
            <table class="table">
                <thead>
                <tr>
                    <td></td>
                    <td>Required</td>
                    <td>Current</td>
                    <td>Capacity</td>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>Pioneers</td>
                    <td>1000</td>
                    <td>1000</td>
                    <td>0</td>
                </tr>
                </tbody>
            </table>
           </div>
    </div>
    <div class="card col-sm-12 col-md-4 gx-0">
        <div class="card-body">
            <h5 class="card-title">Financials</h5>
            <hr/>
            <table class="table table-striped">
                <tbody>
                @if (ProductionItems.Count > 0)
                {
                    @foreach (ProductionItem item in ProductionItems)
                    {
                        <tr>
                            <td>
                                @item.Material.Ticker
                            </td>
                            <td>@item.Amount.ToString("f2")</td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="row">
    <div id="base buildings" class="card col-sm-12 col-md-8 gx-0">
        <div class="card-body">
            <h5 class="card-title">Buildings</h5>
            <hr/>
            <div class="card-group">
                @foreach (BaseBuilding building in basePlan.Buildings)
                {
                    <div class="card col-md-4 col-sm-12 flex-shrink-0 flex-grow-0 border">
                        <div class="card-body"><h6 style="display:inline" class="card-title">@building.BuildingTicker | @building.Building.Name</h6> | @building.Quantity
                            <div class="btn-group btn-group-sm" style="float:right">
                                <button class="btn btn-sm btn-outline-dark">+</button>
                                <button class="btn btn-outline-dark">-</button>
                            </div>
                            <hr/>
                            Constructed? <input class="form-check-input" type="checkbox" @bind="@building.Constructed"></input> <br/>
                            Efficiency: @building.Efficiency <br/>
                            Recipe(s): <br/>
                            <select class="form-select d-flex" @onchange="(e) => SelectedRecipeChanged(e, building)">
                                <option value="0">Select a recipe</option>
                                @foreach (Recipe recipe in building.Building.Recipes)
                                {
                                    @foreach (string mat in recipe.Outputs)
                                    {
                                        <option value="@recipe.RecipeId">@mat</option>
                                    }
                                }
                            </select>
                            <button class="btn btn-outline-secondary" @onclick="async () => await AddRecipe(building)">Add Recipe</button>
                            <hr/>
                            @if(building.Recipes is not null && building.Recipes.Count > 0)
                            {
                                double sumOfTimes = building.Recipes.Select(x => x.Recipe.TimeMs).Aggregate((x, y) => x + y);
                                @foreach (BaseBuildingRecipe recipe in building.Recipes)
                                {
                                    recipe.Allocation = recipe.Recipe.TimeMs / sumOfTimes;
                                    var percentAllocation = recipe.Allocation * 100.0;
                                    <text>@string.Join(", ", recipe.Recipe.Outputs.ToArray()) | @(percentAllocation.ToString("f2"))%</text>
                                    <br/>
                                }
                            }
                        </div>
                        <div class="card-footer">
                            <BuildingCostComponent BaseBuilding="@building" Planet="@planet"></BuildingCostComponent>
                            <button type="button" class="btn btn-outline-danger" @onclick="() => DeleteBuilding(building)">Delete</button>
                        </div>
                    </div>
                }
                @if (addBuilding)
                {
                    <div class="card col-4 flex-shrink-0 border p-2">
                        <form @onsubmit="async () => await AddBuilding(buildingTicker)">
                            <input type="text" class="form-text" @bind="buildingTicker"></input><br/>
                            <button type="submit">Add</button>
                            <button type="button" @onclick="HideAddBuildingForm">Cancel</button>
                        </form>
                    </div>
                }
                
            </div>
        </div>
        <div class="card-footer">
            <div class="btn-group" style="float:right">
                <button class="btn btn-outline-primary" @onclick="DisplayAddBuildingForm">Add Building</button>
                <button class="btn btn-primary" @onclick="async () => await SaveBase()">Save</button>
            </div>
        </div>
    </div>
    <div class="card col-sm-12 col-md-4">
        <div class="card-body">
            <h5 class="card-title">Efficiency Factors</h5>
            <hr/>
            <table id="experts" class="table table-striped table-sm">
            <tbody>
            <tr>
                <td>Agriculture</td>
                <td>@basePlan.AgricultureExperts/5</td>
                <td>
                    <div class="btn-group btn-group-sm"><button class="btn btn-sm btn-outline-dark">+</button><button class="btn btn-outline-dark">-</button></div>
                </td>
            </tr>
            <tr>
                <td>Chemistry</td>
                <td>@basePlan.ChemistryExperts/5</td>
                <td>
                    <div class="btn-group btn-group-sm"><button class="btn btn-sm btn-outline-dark">+</button><button class="btn btn-outline-dark">-</button></div>
                </td>
            </tr>
            <tr>
                <td>Construction</td>
                <td>@basePlan.ConstructionExperts/5</td>
                <td>
                    <div class="btn-group btn-group-sm"><button class="btn btn-sm btn-outline-dark">+</button><button class="btn btn-outline-dark">-</button></div>
                </td>
            </tr>
            <tr>
                <td>Electronics</td>
                <td>@basePlan.ElectronicsExperts/5</td>
                <td>
                    <div class="btn-group btn-group-sm"><button class="btn btn-sm btn-outline-dark">+</button><button class="btn btn-outline-dark">-</button></div>
                </td>
            </tr>
            <tr>
                <td>Food Industries</td>
                <td>@basePlan.FoodExperts/5</td>
                <td>
                    <div class="btn-group btn-group-sm"><button class="btn btn-sm btn-outline-dark">+</button><button class="btn btn-outline-dark">-</button></div>
                </td>
            </tr>
            <tr>
                <td>Fuel Refining</td>
                <td>@basePlan.FuelExperts/5</td>
                <td>
                    <div class="btn-group btn-group-sm"><button class="btn btn-sm btn-outline-dark">+</button><button class="btn btn-outline-dark">-</button></div>
                </td>
            </tr>
            <tr>
                <td>Manufacturing</td>
                <td>@basePlan.ManufacturingExperts/5</td>
                <td>
                    <div class="btn-group btn-group-sm"><button class="btn btn-sm btn-outline-dark">+</button><button class="btn btn-outline-dark">-</button></div>
                </td>
            </tr>
            <tr>
                <td>Metallurgy</td>
                <td>@basePlan.MetallurgyExperts/5</td>
                <td>
                    <div class="btn-group btn-group-sm"><button class="btn btn-sm btn-outline-dark">+</button><button class="btn btn-outline-dark">-</button></div>
                </td>
            </tr>
            <tr>
                <td>Resource Extraction</td>
                <td>@basePlan.ExtractionExperts/5</td>
                <td>
                    <div class="btn-group btn-group-sm"><button class="btn btn-sm btn-outline-dark">+</button><button class="btn btn-outline-dark">-</button></div>
                </td>
            </tr>
            </tbody>
            </table>
        </div>
    </div>
</div>