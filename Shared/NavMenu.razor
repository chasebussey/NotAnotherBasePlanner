@using NotAnotherBasePlanner.Data
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ApplicationUserManager UserManager
@inject BaseService BaseService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">NABP</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <LoginDisplay/>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="market-maker-search">
                <span class="oi oi-magnifying-glass" aria-hidden="true"></span> Market Maker Search
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="supply-chain">
                <span class="oi oi-project" aria-hidden="true"></span> Supply Chains
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="building-info">
                <span class="oi oi-dollar" aria-hidden="true"></span> Building Info
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Identity/Account/Manage">
                <span class="oi oi-cog" aria-hidden="true"></span> Settings
            </NavLink>
        </div>
        <AuthorizeView>
            <hr style="color:whitesmoke" />
            <div class="nav-item px-3">
                <NavLink class="nav-link" @onclick="ToggleBases">
                    <span class="oi oi-spreadsheet" aria-hidden="true"></span> Bases    
                    @if (ShowBases)
                    {
                        <span class="oi oi-chevron-bottom" aria-hidden="true" style="margin-left:1rem"></span>
                    }
                    else
                    {
                        <span class="oi oi-chevron-right" aria-hidden="true" style="margin-left:1rem"></span>
                    }
                </NavLink>
            </div>
            @if (Bases != null && ShowBases)
            {
                foreach (Base b in Bases)
                {
                    <div class="nav-item nav-item-child px-3">
                        @{
                            var url = $"Base/{b.Id}";
                        }
                        <NavLink class="nav-link nav-link-child" href="@url">
                            @b.Planet.Designation
                        </NavLink>
                    </div>
                }
            }
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private bool ShowBases { get; set; }
    
    private List<Base>? Bases { get; set; }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async void OnInitialized()
    {
        base.OnInitialized();
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userId = await UserManager.GetUserIdAsync(authState.User.Identity.Name);

        Bases = await BaseService.GetBasesByUserIdAsync(userId);
        StateHasChanged();
    }

    private void ToggleBases()
    {
        ShowBases = !ShowBases;
    }
}